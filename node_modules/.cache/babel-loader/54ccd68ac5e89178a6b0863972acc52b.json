{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marcb\\\\sources\\\\proto\\\\react-frontend\\\\src\\\\component\\\\LoginComponent.jsx\";\nimport React, { Component } from 'react';\nimport AuthenticationService from '../service/AuthenticationService';\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: 'dummy',\n      password: '',\n      hasLoginFailed: false,\n      showSuccessMessage: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  loginClicked() {\n    //in28minutes,dummy\n    // if(this.state.username==='in28minutes' && this.state.password==='dummy'){\n    //     AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\n    //     this.props.history.push(`/courses`)\n    //     //this.setState({showSuccessMessage:true})\n    //     //this.setState({hasLoginFailed:false})\n    // }\n    // else {\n    //     this.setState({showSuccessMessage:false})\n    //     this.setState({hasLoginFailed:true})\n    // }\n    AuthenticationService.executeBasicAuthenticationService(this.state.username, this.state.password).then(() => {\n      AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password);\n      this.props.history.push(`/courses`);\n    }).catch(() => {\n      this.setState({\n        showSuccessMessage: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n    }); // AuthenticationService\n    //     .executeJwtAuthenticationService(this.state.username, this.state.password)\n    //     .then((response) => {\n    //         AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token)\n    //         this.props.history.push(`/courses`)\n    //     }).catch(() => {\n    //         this.setState({ showSuccessMessage: false })\n    //         this.setState({ hasLoginFailed: true })\n    //     })\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, this.state.hasLoginFailed && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 51\n      }\n    }, \"Invalid Credentials\"), this.state.showSuccessMessage && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 55\n      }\n    }, \"Login Sucessful\"), \"User Name: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 32\n      }\n    }), \"Password: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.loginClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, \"Login\")));\n  }\n\n}\n\nexport default LoginComponent;","map":{"version":3,"sources":["C:/Users/marcb/sources/proto/react-frontend/src/component/LoginComponent.jsx"],"names":["React","Component","AuthenticationService","LoginComponent","constructor","props","state","username","password","hasLoginFailed","showSuccessMessage","handleChange","bind","loginClicked","event","setState","target","name","value","executeBasicAuthenticationService","then","registerSuccessfulLogin","history","push","catch","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,qBAAP,MAAkC,kCAAlC;;AAEA,MAAMC,cAAN,SAA6BF,SAA7B,CAAuC;AAEnCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,OADD;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,cAAc,EAAE,KAHP;AAITC,MAAAA,kBAAkB,EAAE;AAJX,KAAb;AAOA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAChB,SAAKC,QAAL,CACI;AACI,OAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GACMH,KAAK,CAACE,MAAN,CAAaE;AAFvB,KADJ;AAMH;;AAEDL,EAAAA,YAAY,GAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAX,IAAAA,qBAAqB,CAChBiB,iCADL,CACuC,KAAKb,KAAL,CAAWC,QADlD,EAC4D,KAAKD,KAAL,CAAWE,QADvE,EAEKY,IAFL,CAEU,MAAM;AACRlB,MAAAA,qBAAqB,CAACmB,uBAAtB,CAA8C,KAAKf,KAAL,CAAWC,QAAzD,EAAmE,KAAKD,KAAL,CAAWE,QAA9E;AACA,WAAKH,KAAL,CAAWiB,OAAX,CAAmBC,IAAnB,CAAyB,UAAzB;AACH,KALL,EAKOC,KALP,CAKa,MAAM;AACX,WAAKT,QAAL,CAAc;AAAEL,QAAAA,kBAAkB,EAAE;AAAtB,OAAd;AACA,WAAKK,QAAL,CAAc;AAAEN,QAAAA,cAAc,EAAE;AAAlB,OAAd;AACH,KARL,EAbW,CAuBX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH;;AAEDgB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAKnB,KAAL,CAAWG,cAAX,iBAA6B;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFlC,EAGK,KAAKH,KAAL,CAAWI,kBAAX,iBAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHtC,8BAKe;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,UAAxB;AAAmC,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,QAArD;AAA+D,MAAA,QAAQ,EAAE,KAAKI,YAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALf,6BAMc;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,UAA5B;AAAuC,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWE,QAAzD;AAAmE,MAAA,QAAQ,EAAE,KAAKG,YAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANd,eAOI;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,KAAKE,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPJ,CAFJ,CADJ;AAcH;;AA3EkC;;AA8EvC,eAAeV,cAAf","sourcesContent":["import React, { Component } from 'react'\nimport AuthenticationService from '../service/AuthenticationService';\n\nclass LoginComponent extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            username: 'dummy',\n            password: '',\n            hasLoginFailed: false,\n            showSuccessMessage: false\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n        this.loginClicked = this.loginClicked.bind(this)\n    }\n\n    handleChange(event) {\n        this.setState(\n            {\n                [event.target.name]\n                    : event.target.value\n            }\n        )\n    }\n\n    loginClicked() {\n        //in28minutes,dummy\n        // if(this.state.username==='in28minutes' && this.state.password==='dummy'){\n        //     AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\n        //     this.props.history.push(`/courses`)\n        //     //this.setState({showSuccessMessage:true})\n        //     //this.setState({hasLoginFailed:false})\n        // }\n        // else {\n        //     this.setState({showSuccessMessage:false})\n        //     this.setState({hasLoginFailed:true})\n        // }\n\n        AuthenticationService\n            .executeBasicAuthenticationService(this.state.username, this.state.password)\n            .then(() => {\n                AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password)\n                this.props.history.push(`/courses`)\n            }).catch(() => {\n                this.setState({ showSuccessMessage: false })\n                this.setState({ hasLoginFailed: true })\n            })\n\n        // AuthenticationService\n        //     .executeJwtAuthenticationService(this.state.username, this.state.password)\n        //     .then((response) => {\n        //         AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token)\n        //         this.props.history.push(`/courses`)\n        //     }).catch(() => {\n        //         this.setState({ showSuccessMessage: false })\n        //         this.setState({ hasLoginFailed: true })\n        //     })\n\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Login</h1>\n                <div className=\"container\">\n                    {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>*/}\n                    {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\n                    {this.state.showSuccessMessage && <div>Login Sucessful</div>}\n                    {/*<ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage}/>*/}\n                    User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n                    Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                    <button className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default LoginComponent\n"]},"metadata":{},"sourceType":"module"}